// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kvraft.proto

#ifndef PROTOBUF_kvraft_2eproto__INCLUDED
#define PROTOBUF_kvraft_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)

namespace kvraft {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_kvraft_2eproto();
void protobuf_AssignDesc_kvraft_2eproto();
void protobuf_ShutdownFile_kvraft_2eproto();

class AppendEntriesArgs;
class AppendEntriesReply;
class LogEntry;
class Op;
class RequestVoteArgs;
class RequestVoteReply;

enum Op_OpName {
  Op_OpName_GET = 0,
  Op_OpName_PUT = 1,
  Op_OpName_DEL = 2,
  Op_OpName_Op_OpName_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Op_OpName_Op_OpName_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Op_OpName_IsValid(int value);
const Op_OpName Op_OpName_OpName_MIN = Op_OpName_GET;
const Op_OpName Op_OpName_OpName_MAX = Op_OpName_DEL;
const int Op_OpName_OpName_ARRAYSIZE = Op_OpName_OpName_MAX + 1;

const ::google::protobuf::EnumDescriptor* Op_OpName_descriptor();
inline const ::std::string& Op_OpName_Name(Op_OpName value) {
  return ::google::protobuf::internal::NameOfEnum(
    Op_OpName_descriptor(), value);
}
inline bool Op_OpName_Parse(
    const ::std::string& name, Op_OpName* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Op_OpName>(
    Op_OpName_descriptor(), name, value);
}
// ===================================================================

class Op : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kvraft.Op) */ {
 public:
  Op();
  virtual ~Op();

  Op(const Op& from);

  inline Op& operator=(const Op& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Op& default_instance();

  void Swap(Op* other);

  // implements Message ----------------------------------------------

  inline Op* New() const { return New(NULL); }

  Op* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Op& from);
  void MergeFrom(const Op& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Op* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Op_OpName OpName;
  static const OpName GET =
    Op_OpName_GET;
  static const OpName PUT =
    Op_OpName_PUT;
  static const OpName DEL =
    Op_OpName_DEL;
  static inline bool OpName_IsValid(int value) {
    return Op_OpName_IsValid(value);
  }
  static const OpName OpName_MIN =
    Op_OpName_OpName_MIN;
  static const OpName OpName_MAX =
    Op_OpName_OpName_MAX;
  static const int OpName_ARRAYSIZE =
    Op_OpName_OpName_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OpName_descriptor() {
    return Op_OpName_descriptor();
  }
  static inline const ::std::string& OpName_Name(OpName value) {
    return Op_OpName_Name(value);
  }
  static inline bool OpName_Parse(const ::std::string& name,
      OpName* value) {
    return Op_OpName_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string Key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string Value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:kvraft.Op)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_kvraft_2eproto();
  friend void protobuf_AssignDesc_kvraft_2eproto();
  friend void protobuf_ShutdownFile_kvraft_2eproto();

  void InitAsDefaultInstance();
  static Op* default_instance_;
};
// -------------------------------------------------------------------

class LogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kvraft.LogEntry) */ {
 public:
  LogEntry();
  virtual ~LogEntry();

  LogEntry(const LogEntry& from);

  inline LogEntry& operator=(const LogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogEntry& default_instance();

  void Swap(LogEntry* other);

  // implements Message ----------------------------------------------

  inline LogEntry* New() const { return New(NULL); }

  LogEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogEntry& from);
  void MergeFrom(const LogEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .kvraft.Op Command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::kvraft::Op& command() const;
  ::kvraft::Op* mutable_command();
  ::kvraft::Op* release_command();
  void set_allocated_command(::kvraft::Op* command);

  // optional int32 Term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::int32 term() const;
  void set_term(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kvraft.LogEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::kvraft::Op* command_;
  ::google::protobuf::int32 term_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_kvraft_2eproto();
  friend void protobuf_AssignDesc_kvraft_2eproto();
  friend void protobuf_ShutdownFile_kvraft_2eproto();

  void InitAsDefaultInstance();
  static LogEntry* default_instance_;
};
// -------------------------------------------------------------------

class RequestVoteArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kvraft.RequestVoteArgs) */ {
 public:
  RequestVoteArgs();
  virtual ~RequestVoteArgs();

  RequestVoteArgs(const RequestVoteArgs& from);

  inline RequestVoteArgs& operator=(const RequestVoteArgs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestVoteArgs& default_instance();

  void Swap(RequestVoteArgs* other);

  // implements Message ----------------------------------------------

  inline RequestVoteArgs* New() const { return New(NULL); }

  RequestVoteArgs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestVoteArgs& from);
  void MergeFrom(const RequestVoteArgs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestVoteArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int32 term() const;
  void set_term(::google::protobuf::int32 value);

  // optional int32 CandidateId = 2;
  void clear_candidateid();
  static const int kCandidateIdFieldNumber = 2;
  ::google::protobuf::int32 candidateid() const;
  void set_candidateid(::google::protobuf::int32 value);

  // optional int32 LastLogIndex = 3;
  void clear_lastlogindex();
  static const int kLastLogIndexFieldNumber = 3;
  ::google::protobuf::int32 lastlogindex() const;
  void set_lastlogindex(::google::protobuf::int32 value);

  // optional int32 LastLogTerm = 4;
  void clear_lastlogterm();
  static const int kLastLogTermFieldNumber = 4;
  ::google::protobuf::int32 lastlogterm() const;
  void set_lastlogterm(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kvraft.RequestVoteArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 term_;
  ::google::protobuf::int32 candidateid_;
  ::google::protobuf::int32 lastlogindex_;
  ::google::protobuf::int32 lastlogterm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_kvraft_2eproto();
  friend void protobuf_AssignDesc_kvraft_2eproto();
  friend void protobuf_ShutdownFile_kvraft_2eproto();

  void InitAsDefaultInstance();
  static RequestVoteArgs* default_instance_;
};
// -------------------------------------------------------------------

class RequestVoteReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kvraft.RequestVoteReply) */ {
 public:
  RequestVoteReply();
  virtual ~RequestVoteReply();

  RequestVoteReply(const RequestVoteReply& from);

  inline RequestVoteReply& operator=(const RequestVoteReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestVoteReply& default_instance();

  void Swap(RequestVoteReply* other);

  // implements Message ----------------------------------------------

  inline RequestVoteReply* New() const { return New(NULL); }

  RequestVoteReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestVoteReply& from);
  void MergeFrom(const RequestVoteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestVoteReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int32 term() const;
  void set_term(::google::protobuf::int32 value);

  // optional bool VoteGranted = 2;
  void clear_votegranted();
  static const int kVoteGrantedFieldNumber = 2;
  bool votegranted() const;
  void set_votegranted(bool value);

  // @@protoc_insertion_point(class_scope:kvraft.RequestVoteReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 term_;
  bool votegranted_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_kvraft_2eproto();
  friend void protobuf_AssignDesc_kvraft_2eproto();
  friend void protobuf_ShutdownFile_kvraft_2eproto();

  void InitAsDefaultInstance();
  static RequestVoteReply* default_instance_;
};
// -------------------------------------------------------------------

class AppendEntriesArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kvraft.AppendEntriesArgs) */ {
 public:
  AppendEntriesArgs();
  virtual ~AppendEntriesArgs();

  AppendEntriesArgs(const AppendEntriesArgs& from);

  inline AppendEntriesArgs& operator=(const AppendEntriesArgs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesArgs& default_instance();

  void Swap(AppendEntriesArgs* other);

  // implements Message ----------------------------------------------

  inline AppendEntriesArgs* New() const { return New(NULL); }

  AppendEntriesArgs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppendEntriesArgs& from);
  void MergeFrom(const AppendEntriesArgs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppendEntriesArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int32 term() const;
  void set_term(::google::protobuf::int32 value);

  // optional int32 LeaderId = 2;
  void clear_leaderid();
  static const int kLeaderIdFieldNumber = 2;
  ::google::protobuf::int32 leaderid() const;
  void set_leaderid(::google::protobuf::int32 value);

  // optional int32 PrevLogIndex = 3;
  void clear_prevlogindex();
  static const int kPrevLogIndexFieldNumber = 3;
  ::google::protobuf::int32 prevlogindex() const;
  void set_prevlogindex(::google::protobuf::int32 value);

  // optional int32 PrevLogTerm = 4;
  void clear_prevlogterm();
  static const int kPrevLogTermFieldNumber = 4;
  ::google::protobuf::int32 prevlogterm() const;
  void set_prevlogterm(::google::protobuf::int32 value);

  // optional int32 LeaderCommit = 5;
  void clear_leadercommit();
  static const int kLeaderCommitFieldNumber = 5;
  ::google::protobuf::int32 leadercommit() const;
  void set_leadercommit(::google::protobuf::int32 value);

  // repeated .kvraft.LogEntry Entries = 6;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 6;
  const ::kvraft::LogEntry& entries(int index) const;
  ::kvraft::LogEntry* mutable_entries(int index);
  ::kvraft::LogEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::kvraft::LogEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::kvraft::LogEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:kvraft.AppendEntriesArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 term_;
  ::google::protobuf::int32 leaderid_;
  ::google::protobuf::int32 prevlogindex_;
  ::google::protobuf::int32 prevlogterm_;
  ::google::protobuf::RepeatedPtrField< ::kvraft::LogEntry > entries_;
  ::google::protobuf::int32 leadercommit_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_kvraft_2eproto();
  friend void protobuf_AssignDesc_kvraft_2eproto();
  friend void protobuf_ShutdownFile_kvraft_2eproto();

  void InitAsDefaultInstance();
  static AppendEntriesArgs* default_instance_;
};
// -------------------------------------------------------------------

class AppendEntriesReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kvraft.AppendEntriesReply) */ {
 public:
  AppendEntriesReply();
  virtual ~AppendEntriesReply();

  AppendEntriesReply(const AppendEntriesReply& from);

  inline AppendEntriesReply& operator=(const AppendEntriesReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesReply& default_instance();

  void Swap(AppendEntriesReply* other);

  // implements Message ----------------------------------------------

  inline AppendEntriesReply* New() const { return New(NULL); }

  AppendEntriesReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppendEntriesReply& from);
  void MergeFrom(const AppendEntriesReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppendEntriesReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int32 term() const;
  void set_term(::google::protobuf::int32 value);

  // optional bool Success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // optional int32 ReplicatedIndex = 3;
  void clear_replicatedindex();
  static const int kReplicatedIndexFieldNumber = 3;
  ::google::protobuf::int32 replicatedindex() const;
  void set_replicatedindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kvraft.AppendEntriesReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 term_;
  bool success_;
  ::google::protobuf::int32 replicatedindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_kvraft_2eproto();
  friend void protobuf_AssignDesc_kvraft_2eproto();
  friend void protobuf_ShutdownFile_kvraft_2eproto();

  void InitAsDefaultInstance();
  static AppendEntriesReply* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Op

// optional string Key = 1;
inline void Op::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Op::key() const {
  // @@protoc_insertion_point(field_get:kvraft.Op.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Op::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kvraft.Op.Key)
}
inline void Op::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kvraft.Op.Key)
}
inline void Op::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kvraft.Op.Key)
}
inline ::std::string* Op::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:kvraft.Op.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Op::release_key() {
  // @@protoc_insertion_point(field_release:kvraft.Op.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Op::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:kvraft.Op.Key)
}

// optional string Value = 2;
inline void Op::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Op::value() const {
  // @@protoc_insertion_point(field_get:kvraft.Op.Value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Op::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kvraft.Op.Value)
}
inline void Op::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kvraft.Op.Value)
}
inline void Op::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kvraft.Op.Value)
}
inline ::std::string* Op::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:kvraft.Op.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Op::release_value() {
  // @@protoc_insertion_point(field_release:kvraft.Op.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Op::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:kvraft.Op.Value)
}

// -------------------------------------------------------------------

// LogEntry

// optional .kvraft.Op Command = 1;
inline bool LogEntry::has_command() const {
  return !_is_default_instance_ && command_ != NULL;
}
inline void LogEntry::clear_command() {
  if (GetArenaNoVirtual() == NULL && command_ != NULL) delete command_;
  command_ = NULL;
}
inline const ::kvraft::Op& LogEntry::command() const {
  // @@protoc_insertion_point(field_get:kvraft.LogEntry.Command)
  return command_ != NULL ? *command_ : *default_instance_->command_;
}
inline ::kvraft::Op* LogEntry::mutable_command() {
  
  if (command_ == NULL) {
    command_ = new ::kvraft::Op;
  }
  // @@protoc_insertion_point(field_mutable:kvraft.LogEntry.Command)
  return command_;
}
inline ::kvraft::Op* LogEntry::release_command() {
  // @@protoc_insertion_point(field_release:kvraft.LogEntry.Command)
  
  ::kvraft::Op* temp = command_;
  command_ = NULL;
  return temp;
}
inline void LogEntry::set_allocated_command(::kvraft::Op* command) {
  delete command_;
  command_ = command;
  if (command) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:kvraft.LogEntry.Command)
}

// optional int32 Term = 2;
inline void LogEntry::clear_term() {
  term_ = 0;
}
inline ::google::protobuf::int32 LogEntry::term() const {
  // @@protoc_insertion_point(field_get:kvraft.LogEntry.Term)
  return term_;
}
inline void LogEntry::set_term(::google::protobuf::int32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:kvraft.LogEntry.Term)
}

// -------------------------------------------------------------------

// RequestVoteArgs

// optional int32 Term = 1;
inline void RequestVoteArgs::clear_term() {
  term_ = 0;
}
inline ::google::protobuf::int32 RequestVoteArgs::term() const {
  // @@protoc_insertion_point(field_get:kvraft.RequestVoteArgs.Term)
  return term_;
}
inline void RequestVoteArgs::set_term(::google::protobuf::int32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:kvraft.RequestVoteArgs.Term)
}

// optional int32 CandidateId = 2;
inline void RequestVoteArgs::clear_candidateid() {
  candidateid_ = 0;
}
inline ::google::protobuf::int32 RequestVoteArgs::candidateid() const {
  // @@protoc_insertion_point(field_get:kvraft.RequestVoteArgs.CandidateId)
  return candidateid_;
}
inline void RequestVoteArgs::set_candidateid(::google::protobuf::int32 value) {
  
  candidateid_ = value;
  // @@protoc_insertion_point(field_set:kvraft.RequestVoteArgs.CandidateId)
}

// optional int32 LastLogIndex = 3;
inline void RequestVoteArgs::clear_lastlogindex() {
  lastlogindex_ = 0;
}
inline ::google::protobuf::int32 RequestVoteArgs::lastlogindex() const {
  // @@protoc_insertion_point(field_get:kvraft.RequestVoteArgs.LastLogIndex)
  return lastlogindex_;
}
inline void RequestVoteArgs::set_lastlogindex(::google::protobuf::int32 value) {
  
  lastlogindex_ = value;
  // @@protoc_insertion_point(field_set:kvraft.RequestVoteArgs.LastLogIndex)
}

// optional int32 LastLogTerm = 4;
inline void RequestVoteArgs::clear_lastlogterm() {
  lastlogterm_ = 0;
}
inline ::google::protobuf::int32 RequestVoteArgs::lastlogterm() const {
  // @@protoc_insertion_point(field_get:kvraft.RequestVoteArgs.LastLogTerm)
  return lastlogterm_;
}
inline void RequestVoteArgs::set_lastlogterm(::google::protobuf::int32 value) {
  
  lastlogterm_ = value;
  // @@protoc_insertion_point(field_set:kvraft.RequestVoteArgs.LastLogTerm)
}

// -------------------------------------------------------------------

// RequestVoteReply

// optional int32 Term = 1;
inline void RequestVoteReply::clear_term() {
  term_ = 0;
}
inline ::google::protobuf::int32 RequestVoteReply::term() const {
  // @@protoc_insertion_point(field_get:kvraft.RequestVoteReply.Term)
  return term_;
}
inline void RequestVoteReply::set_term(::google::protobuf::int32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:kvraft.RequestVoteReply.Term)
}

// optional bool VoteGranted = 2;
inline void RequestVoteReply::clear_votegranted() {
  votegranted_ = false;
}
inline bool RequestVoteReply::votegranted() const {
  // @@protoc_insertion_point(field_get:kvraft.RequestVoteReply.VoteGranted)
  return votegranted_;
}
inline void RequestVoteReply::set_votegranted(bool value) {
  
  votegranted_ = value;
  // @@protoc_insertion_point(field_set:kvraft.RequestVoteReply.VoteGranted)
}

// -------------------------------------------------------------------

// AppendEntriesArgs

// optional int32 Term = 1;
inline void AppendEntriesArgs::clear_term() {
  term_ = 0;
}
inline ::google::protobuf::int32 AppendEntriesArgs::term() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesArgs.Term)
  return term_;
}
inline void AppendEntriesArgs::set_term(::google::protobuf::int32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesArgs.Term)
}

// optional int32 LeaderId = 2;
inline void AppendEntriesArgs::clear_leaderid() {
  leaderid_ = 0;
}
inline ::google::protobuf::int32 AppendEntriesArgs::leaderid() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesArgs.LeaderId)
  return leaderid_;
}
inline void AppendEntriesArgs::set_leaderid(::google::protobuf::int32 value) {
  
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesArgs.LeaderId)
}

// optional int32 PrevLogIndex = 3;
inline void AppendEntriesArgs::clear_prevlogindex() {
  prevlogindex_ = 0;
}
inline ::google::protobuf::int32 AppendEntriesArgs::prevlogindex() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesArgs.PrevLogIndex)
  return prevlogindex_;
}
inline void AppendEntriesArgs::set_prevlogindex(::google::protobuf::int32 value) {
  
  prevlogindex_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesArgs.PrevLogIndex)
}

// optional int32 PrevLogTerm = 4;
inline void AppendEntriesArgs::clear_prevlogterm() {
  prevlogterm_ = 0;
}
inline ::google::protobuf::int32 AppendEntriesArgs::prevlogterm() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesArgs.PrevLogTerm)
  return prevlogterm_;
}
inline void AppendEntriesArgs::set_prevlogterm(::google::protobuf::int32 value) {
  
  prevlogterm_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesArgs.PrevLogTerm)
}

// optional int32 LeaderCommit = 5;
inline void AppendEntriesArgs::clear_leadercommit() {
  leadercommit_ = 0;
}
inline ::google::protobuf::int32 AppendEntriesArgs::leadercommit() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesArgs.LeaderCommit)
  return leadercommit_;
}
inline void AppendEntriesArgs::set_leadercommit(::google::protobuf::int32 value) {
  
  leadercommit_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesArgs.LeaderCommit)
}

// repeated .kvraft.LogEntry Entries = 6;
inline int AppendEntriesArgs::entries_size() const {
  return entries_.size();
}
inline void AppendEntriesArgs::clear_entries() {
  entries_.Clear();
}
inline const ::kvraft::LogEntry& AppendEntriesArgs::entries(int index) const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesArgs.Entries)
  return entries_.Get(index);
}
inline ::kvraft::LogEntry* AppendEntriesArgs::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:kvraft.AppendEntriesArgs.Entries)
  return entries_.Mutable(index);
}
inline ::kvraft::LogEntry* AppendEntriesArgs::add_entries() {
  // @@protoc_insertion_point(field_add:kvraft.AppendEntriesArgs.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::kvraft::LogEntry >*
AppendEntriesArgs::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:kvraft.AppendEntriesArgs.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::kvraft::LogEntry >&
AppendEntriesArgs::entries() const {
  // @@protoc_insertion_point(field_list:kvraft.AppendEntriesArgs.Entries)
  return entries_;
}

// -------------------------------------------------------------------

// AppendEntriesReply

// optional int32 Term = 1;
inline void AppendEntriesReply::clear_term() {
  term_ = 0;
}
inline ::google::protobuf::int32 AppendEntriesReply::term() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesReply.Term)
  return term_;
}
inline void AppendEntriesReply::set_term(::google::protobuf::int32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesReply.Term)
}

// optional bool Success = 2;
inline void AppendEntriesReply::clear_success() {
  success_ = false;
}
inline bool AppendEntriesReply::success() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesReply.Success)
  return success_;
}
inline void AppendEntriesReply::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesReply.Success)
}

// optional int32 ReplicatedIndex = 3;
inline void AppendEntriesReply::clear_replicatedindex() {
  replicatedindex_ = 0;
}
inline ::google::protobuf::int32 AppendEntriesReply::replicatedindex() const {
  // @@protoc_insertion_point(field_get:kvraft.AppendEntriesReply.ReplicatedIndex)
  return replicatedindex_;
}
inline void AppendEntriesReply::set_replicatedindex(::google::protobuf::int32 value) {
  
  replicatedindex_ = value;
  // @@protoc_insertion_point(field_set:kvraft.AppendEntriesReply.ReplicatedIndex)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace kvraft

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::kvraft::Op_OpName> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kvraft::Op_OpName>() {
  return ::kvraft::Op_OpName_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_kvraft_2eproto__INCLUDED
